{"remainingRequest":"D:\\DayDayUp\\project\\demo\\node_modules\\thread-loader\\dist\\cjs.js!D:\\DayDayUp\\project\\demo\\node_modules\\babel-loader\\lib\\index.js!D:\\DayDayUp\\project\\demo\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\DayDayUp\\project\\demo\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\DayDayUp\\project\\demo\\node_modules\\@jiaminghi\\data-view\\lib\\components\\capsuleChart\\src\\main.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\DayDayUp\\project\\demo\\node_modules\\@jiaminghi\\data-view\\lib\\components\\capsuleChart\\src\\main.vue","mtime":499162500000},{"path":"D:\\DayDayUp\\project\\demo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DayDayUp\\project\\demo\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DayDayUp\\project\\demo\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\DayDayUp\\project\\demo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DayDayUp\\project\\demo\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsbCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcCI7CmltcG9ydCBfdG9Db25zdW1hYmxlQXJyYXkgZnJvbSAiRDpcXERheURheVVwXFxwcm9qZWN0XFxkZW1vXFxub2RlX21vZHVsZXNcXEBiYWJlbFxccnVudGltZS9oZWxwZXJzL2VzbS90b0NvbnN1bWFibGVBcnJheSI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB7IGRlZXBNZXJnZSB9IGZyb20gJ0BqaWFtaW5naGkvY2hhcnRzL2xpYi91dGlsL2luZGV4JzsKaW1wb3J0IHsgZGVlcENsb25lIH0gZnJvbSAnQGppYW1pbmdoaS9jLXJlbmRlci9saWIvcGx1Z2luL3V0aWwnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0R2Q2Fwc3VsZUNoYXJ0JywKICBwcm9wczogewogICAgY29uZmlnOiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgZGVmYXVsdDogZnVuY3Rpb24gX2RlZmF1bHQoKSB7CiAgICAgICAgcmV0dXJuIHt9OwogICAgICB9CiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZGVmYXVsdENvbmZpZzogewogICAgICAgIC8qKgogICAgICAgICAqIEBkZXNjcmlwdGlvbiBDYXBzdWxlIGNoYXJ0IGRhdGEKICAgICAgICAgKiBAdHlwZSB7QXJyYXk8T2JqZWN0Pn0KICAgICAgICAgKiBAZGVmYXVsdCBkYXRhID0gW10KICAgICAgICAgKiBAZXhhbXBsZSBkYXRhID0gW3sgbmFtZTogJ2ZvbzEnLCB2YWx1ZTogMTAwIH0sIHsgbmFtZTogJ2ZvbzInLCB2YWx1ZTogMTAwIH1dCiAgICAgICAgICovCiAgICAgICAgZGF0YTogW10sCgogICAgICAgIC8qKgogICAgICAgICAqIEBkZXNjcmlwdGlvbiBDb2xvcnMgKGhleHxyZ2J8cmdiYXxjb2xvciBrZXl3b3JkcykKICAgICAgICAgKiBAdHlwZSB7QXJyYXk8U3RyaW5nPn0KICAgICAgICAgKiBAZGVmYXVsdCBjb2xvciA9IFsnIzM3YTJkYScsICcjMzJjNWU5JywgJyM2N2UwZTMnLCAnIzlmZTZiOCcsICcjZmZkYjVjJywgJyNmZjlmN2YnLCAnI2ZiNzI5MyddCiAgICAgICAgICogQGV4YW1wbGUgY29sb3IgPSBbJyMwMDAnLCAncmdiKDAsIDAsIDApJywgJ3JnYmEoMCwgMCwgMCwgMSknLCAncmVkJ10KICAgICAgICAgKi8KICAgICAgICBjb2xvcnM6IFsnIzM3YTJkYScsICcjMzJjNWU5JywgJyM2N2UwZTMnLCAnIzlmZTZiOCcsICcjZmZkYjVjJywgJyNmZjlmN2YnLCAnI2ZiNzI5MyddLAoKICAgICAgICAvKioKICAgICAgICAgKiBAZGVzY3JpcHRpb24gQ2hhcnQgdW5pdAogICAgICAgICAqIEB0eXBlIHtTdHJpbmd9CiAgICAgICAgICogQGRlZmF1bHQgdW5pdCA9ICcnCiAgICAgICAgICovCiAgICAgICAgdW5pdDogJycKICAgICAgfSwKICAgICAgbWVyZ2VkQ29uZmlnOiBudWxsLAogICAgICBjYXBzdWxlTGVuZ3RoOiBbXSwKICAgICAgbGFiZWxEYXRhOiBbXQogICAgfTsKICB9LAogIHdhdGNoOiB7CiAgICBjb25maWc6IGZ1bmN0aW9uIGNvbmZpZygpIHsKICAgICAgdmFyIGNhbGNEYXRhID0gdGhpcy5jYWxjRGF0YTsKICAgICAgY2FsY0RhdGEoKTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGNhbGNEYXRhOiBmdW5jdGlvbiBjYWxjRGF0YSgpIHsKICAgICAgdmFyIG1lcmdlQ29uZmlnID0gdGhpcy5tZXJnZUNvbmZpZywKICAgICAgICAgIGNhbGNDYXBzdWxlTGVuZ3RoQW5kTGFiZWxEYXRhID0gdGhpcy5jYWxjQ2Fwc3VsZUxlbmd0aEFuZExhYmVsRGF0YTsKICAgICAgbWVyZ2VDb25maWcoKTsKICAgICAgY2FsY0NhcHN1bGVMZW5ndGhBbmRMYWJlbERhdGEoKTsKICAgIH0sCiAgICBtZXJnZUNvbmZpZzogZnVuY3Rpb24gbWVyZ2VDb25maWcoKSB7CiAgICAgIHZhciBjb25maWcgPSB0aGlzLmNvbmZpZywKICAgICAgICAgIGRlZmF1bHRDb25maWcgPSB0aGlzLmRlZmF1bHRDb25maWc7CiAgICAgIHRoaXMubWVyZ2VkQ29uZmlnID0gZGVlcE1lcmdlKGRlZXBDbG9uZShkZWZhdWx0Q29uZmlnLCB0cnVlKSwgY29uZmlnIHx8IHt9KTsKICAgIH0sCiAgICBjYWxjQ2Fwc3VsZUxlbmd0aEFuZExhYmVsRGF0YTogZnVuY3Rpb24gY2FsY0NhcHN1bGVMZW5ndGhBbmRMYWJlbERhdGEoKSB7CiAgICAgIHZhciBkYXRhID0gdGhpcy5tZXJnZWRDb25maWcuZGF0YTsKICAgICAgaWYgKCFkYXRhLmxlbmd0aCkgcmV0dXJuOwogICAgICB2YXIgY2Fwc3VsZVZhbHVlID0gZGF0YS5tYXAoZnVuY3Rpb24gKF9yZWYpIHsKICAgICAgICB2YXIgdmFsdWUgPSBfcmVmLnZhbHVlOwogICAgICAgIHJldHVybiB2YWx1ZTsKICAgICAgfSk7CiAgICAgIHZhciBtYXhWYWx1ZSA9IE1hdGgubWF4LmFwcGx5KE1hdGgsIF90b0NvbnN1bWFibGVBcnJheShjYXBzdWxlVmFsdWUpKTsKICAgICAgdGhpcy5jYXBzdWxlTGVuZ3RoID0gY2Fwc3VsZVZhbHVlLm1hcChmdW5jdGlvbiAodikgewogICAgICAgIHJldHVybiBtYXhWYWx1ZSA/IHYgLyBtYXhWYWx1ZSA6IDA7CiAgICAgIH0pOwogICAgICB2YXIgb25lRmlmdGggPSBtYXhWYWx1ZSAvIDU7CiAgICAgIHRoaXMubGFiZWxEYXRhID0gbmV3IEFycmF5KDYpLmZpbGwoMCkubWFwKGZ1bmN0aW9uICh2LCBpKSB7CiAgICAgICAgcmV0dXJuIE1hdGguY2VpbChpICogb25lRmlmdGgpOwogICAgICB9KTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgY2FsY0RhdGEgPSB0aGlzLmNhbGNEYXRhOwogICAgY2FsY0RhdGEoKTsKICB9Cn07"},{"version":3,"sources":["main.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA,SAAA,SAAA,QAAA,kCAAA;AAEA,SAAA,SAAA,QAAA,qCAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,gBADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,EAAA;AAAA;AAFA;AADA,GAFA;AAQA,EAAA,IARA,kBAQA;AACA,WAAA;AACA,MAAA,aAAA,EAAA;AACA;;;;;;AAMA,QAAA,IAAA,EAAA,EAPA;;AAQA;;;;;;AAMA,QAAA,MAAA,EAAA,CAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,CAdA;;AAeA;;;;;AAKA,QAAA,IAAA,EAAA;AApBA,OADA;AAwBA,MAAA,YAAA,EAAA,IAxBA;AA0BA,MAAA,aAAA,EAAA,EA1BA;AA2BA,MAAA,SAAA,EAAA;AA3BA,KAAA;AA6BA,GAtCA;AAuCA,EAAA,KAAA,EAAA;AACA,IAAA,MADA,oBACA;AAAA,UACA,QADA,GACA,IADA,CACA,QADA;AAGA,MAAA,QAAA;AACA;AALA,GAvCA;AA8CA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,sBACA;AAAA,UACA,WADA,GACA,IADA,CACA,WADA;AAAA,UACA,6BADA,GACA,IADA,CACA,6BADA;AAGA,MAAA,WAAA;AAEA,MAAA,6BAAA;AACA,KAPA;AAQA,IAAA,WARA,yBAQA;AAAA,UACA,MADA,GACA,IADA,CACA,MADA;AAAA,UACA,aADA,GACA,IADA,CACA,aADA;AAGA,WAAA,YAAA,GAAA,SAAA,CAAA,SAAA,CAAA,aAAA,EAAA,IAAA,CAAA,EAAA,MAAA,IAAA,EAAA,CAAA;AACA,KAZA;AAaA,IAAA,6BAbA,2CAaA;AAAA,UACA,IADA,GACA,KAAA,YADA,CACA,IADA;AAGA,UAAA,CAAA,IAAA,CAAA,MAAA,EAAA;AAEA,UAAA,YAAA,GAAA,IAAA,CAAA,GAAA,CAAA;AAAA,YAAA,KAAA,QAAA,KAAA;AAAA,eAAA,KAAA;AAAA,OAAA,CAAA;AAEA,UAAA,QAAA,GAAA,IAAA,CAAA,GAAA,OAAA,IAAA,qBAAA,YAAA,EAAA;AAEA,WAAA,aAAA,GAAA,YAAA,CAAA,GAAA,CAAA,UAAA,CAAA;AAAA,eAAA,QAAA,GAAA,CAAA,GAAA,QAAA,GAAA,CAAA;AAAA,OAAA,CAAA;AAEA,UAAA,QAAA,GAAA,QAAA,GAAA,CAAA;AAEA,WAAA,SAAA,GAAA,IAAA,KAAA,CAAA,CAAA,EAAA,IAAA,CAAA,CAAA,EAAA,GAAA,CAAA,UAAA,CAAA,EAAA,CAAA;AAAA,eAAA,IAAA,CAAA,IAAA,CAAA,CAAA,GAAA,QAAA,CAAA;AAAA,OAAA,CAAA;AACA;AA3BA,GA9CA;AA2EA,EAAA,OA3EA,qBA2EA;AAAA,QACA,QADA,GACA,IADA,CACA,QADA;AAGA,IAAA,QAAA;AACA;AA/EA,CAAA","sourcesContent":["<template>\n  <div class=\"dv-capsule-chart\">\n    <template v-if=\"mergedConfig\">\n      <div class=\"label-column\">\n        <div v-for=\"item in mergedConfig.data\" :key=\"item.name\">{{ item.name }}</div>\n        <div>&nbsp;</div>\n      </div>\n\n      <div class=\"capsule-container\">\n        <div\n          class=\"capsule-item\"\n          v-for=\"(capsule, index) in capsuleLength\"\n          :key=\"index\"\n        >\n          <div :style=\"`width: ${capsule * 100}%; background-color: ${mergedConfig.colors[index % mergedConfig.colors.length]};`\"></div>\n        </div>\n\n        <div class=\"unit-label\">\n          <div v-for=\"(label, index) in labelData\" :key=\"label + index\">{{ label }}</div>\n        </div>\n      </div>\n\n      <div class=\"unit-text\" v-if=\"mergedConfig.unit\">{{ mergedConfig.unit }}</div>\n    </template>\n  </div>\n</template>\n\n<script>\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nexport default {\n  name: 'DvCapsuleChart',\n  props: {\n    config: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  data () {\n    return {\n      defaultConfig: {\n        /**\n         * @description Capsule chart data\n         * @type {Array<Object>}\n         * @default data = []\n         * @example data = [{ name: 'foo1', value: 100 }, { name: 'foo2', value: 100 }]\n         */\n        data: [],\n        /**\n         * @description Colors (hex|rgb|rgba|color keywords)\n         * @type {Array<String>}\n         * @default color = ['#37a2da', '#32c5e9', '#67e0e3', '#9fe6b8', '#ffdb5c', '#ff9f7f', '#fb7293']\n         * @example color = ['#000', 'rgb(0, 0, 0)', 'rgba(0, 0, 0, 1)', 'red']\n         */\n        colors: ['#37a2da', '#32c5e9', '#67e0e3', '#9fe6b8', '#ffdb5c', '#ff9f7f', '#fb7293'],\n        /**\n         * @description Chart unit\n         * @type {String}\n         * @default unit = ''\n         */\n        unit: ''\n      },\n\n      mergedConfig: null,\n\n      capsuleLength: [],\n      labelData: []\n    }\n  },\n  watch: {\n    config () {\n      const { calcData } = this\n\n      calcData()\n    }\n  },\n  methods: {\n    calcData () {\n      const { mergeConfig, calcCapsuleLengthAndLabelData } = this\n\n      mergeConfig()\n\n      calcCapsuleLengthAndLabelData()\n    },\n    mergeConfig () {\n      let { config, defaultConfig } = this\n\n      this.mergedConfig = deepMerge(deepClone(defaultConfig, true), config || {})\n    },\n    calcCapsuleLengthAndLabelData () {\n      const { data } = this.mergedConfig\n\n      if (!data.length) return\n\n      const capsuleValue = data.map(({ value }) => value)\n\n      const maxValue = Math.max(...capsuleValue)\n\n      this.capsuleLength = capsuleValue.map(v => maxValue ? v / maxValue : 0)\n\n      const oneFifth = maxValue / 5\n\n      this.labelData = new Array(6).fill(0).map((v, i) => Math.ceil(i * oneFifth))\n    }\n  },\n  mounted () {\n    const { calcData } = this\n\n    calcData()\n  }\n}\n</script>"],"sourceRoot":"node_modules/@jiaminghi/data-view/lib/components/capsuleChart/src"}]}